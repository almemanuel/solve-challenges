# -*- coding: utf-8 -*-
"""extractor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/almemanuel/solve-challenges/blob/main/prot/pdf/extractor.ipynb

# Tentando extrair email e telefone de um PDF

Com mais experiência, essa tarefa pode ser melhor automatizada. Tomei como ponto de partida o fato de ter acesso ao documento de origem, obervando sua estrutura
"""

import PyPDF2
import re
import urllib.request
import io
import sqlalchemy as db
from sqlalchemy.orm import sessionmaker

# extração dos dados
URL = 'https://github.com/almemanuel/solve-challenges/raw/main/prot/pdf/dados.pdf'
req = urllib.request.Request(URL)
remote_file = urllib.request.urlopen(req).read()
remote_file_bytes = io.BytesIO(remote_file)
read_pdf = PyPDF2.PdfFileReader(remote_file_bytes)
page = read_pdf.getPage(0)
page_content = page.extractText()
parsed = ''.join(page_content)
parsed = re.sub('n', '', parsed)
parsed = parsed.split('\n')

# salva o que encontrar em uma lista
phones = emails = []
for bit_of_text in parsed:
    if '@mail' in bit_of_text:
        emails.append(bit_of_text)
    elif '(' in bit_of_text and ')' in bit_of_text and '-' in bit_of_text:
        phones.append(bit_of_text)

# banco
host="localhost"
user="yourusername"
password="yourpassword"
database="mydatabase"

engine = db.create_engine(f"mysql+pymysql://{user}:{password}@{host}/{database}")
Session = sessionmaker(bind=engine)
session = Session()

# tenta criar a tabela
try:
    session.execute("""CREATE TABLE test(
               	id INT NOT NULL AUTO_INCREMENT
               	email VARCHAR
               	phone VARCHAR)""")
except Exception as e:
    print(e)

# insere na base
for i in range(len(emails)):
    session.execute(f"""INSERT INTO "test" (email, phone) VALUES ('{emails[i]}', '{phones[i]}') """)
