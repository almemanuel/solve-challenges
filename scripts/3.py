# -*- coding: utf-8 -*-
"""extractor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/almemanuel/solve-challenges/blob/main/prot/png/extractor.ipynb

# Tentando extrair email e telefone de um png

Com mais experiência, essa tarefa pode ser melhor automatizada. Tomei como ponto de partida o fato de ter acesso ao documento de origem, obervando sua estrutura. A leitura correta de dados de imagem parece ser menos precisa que pdf, logo, a possiblidade de falso-positivo (código funcional mas com resultado inesperado) é maior
"""

import easyocr
import sqlalchemy as db
from sqlalchemy.orm import sessionmaker

# extração dos dados
reader_img = easyocr.Reader(['en', 'la'])
text_from_img = reader_img.readtext('https://github.com/almemanuel/solve-challenges/raw/main/prot/png/dados.png', paragraph=False)

# salva o que encontrar em uma lista
phones = emails = []
for bit_of_text in text_from_img:
    if '@mail' in bit_of_text:
        emails.append(bit_of_text)
    elif '(' in bit_of_text and ')' in bit_of_text and '-' in bit_of_text:
        phones.append(bit_of_text)

# banco
host="localhost"
user="yourusername"
password="yourpassword"
database="mydatabase"

engine = db.create_engine(f"mysql+pymysql://{user}:{password}@{host}/{database}")
Session = sessionmaker(bind=engine)
session = Session()

# tenta criar a tabela
try:
    session.execute("""CREATE TABLE test(
               	id INT NOT NULL AUTO_INCREMENT
               	email VARCHAR
               	phone VARCHAR)""")
except Exception as e:
    print(e)

# insere na base
for i in range(len(emails)):
    session.execute(f"""INSERT INTO "test" (email, phone) VALUES ('{emails[i]}', '{phones[i]}') """)
